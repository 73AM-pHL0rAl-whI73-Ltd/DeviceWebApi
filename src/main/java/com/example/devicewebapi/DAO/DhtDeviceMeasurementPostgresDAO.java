package com.example.devicewebapi.DAO;


import com.example.devicewebapi.models.DeviceMessage;
import lombok.AllArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository("postgres") // bean and identifier
@AllArgsConstructor // autogenerated constructor
public class DhtDeviceMeasurementPostgresDAO implements IDeviceMeasurementDataAccess {

    // java database connector
    @Autowired
    private final JdbcTemplate jdbcTemplate;

    @Override
    public void addDeviceMeasurement(DeviceMessage measurement) {
        String query = "INSERT INTO Measurements " +
                "(temperature, humidity, timeStamp, deviceId) " +
                "VALUES (?, ? , ? , ? )";

        // execute query
        jdbcTemplate.update(query,
                measurement.getTemperature(),
                measurement.getHumidity(),
                measurement.getTimeStamp(),
                measurement.getDeviceId()
        );
    }

    @Override
    public List<DeviceMessage> getAllDeviceMeasurements() {
        String query = "SELECT * FROM Measurements";

        return jdbcTemplate.query(query,
                (resultSet, index) -> DeviceMessage.DeviceMessageFromResultSet(resultSet)
        );
    }

    @Override
    public List<DeviceMessage> getLatestMeasurements(int top){
        String query = "SELECT * FROM Measurements ORDER BY timeStamp LIMIT ?";
        return jdbcTemplate.query(query,
                (resultSet, index) -> DeviceMessage.DeviceMessageFromResultSet(resultSet),
                top
        );
    }

    @Override
    public List<DeviceMessage> getMeasurementByDeviceId(String id) {
        String query = "SELECT * FROM Measurements WHERE deviceId = ?";
        return jdbcTemplate.query(query,
                (resultSet, index) -> DeviceMessage.DeviceMessageFromResultSet(resultSet),
                id
        );
    }
}
