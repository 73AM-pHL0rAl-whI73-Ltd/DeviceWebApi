package com.example.devicewebapi.DAO;


import com.example.devicewebapi.models.DeviceMessage;
import com.example.devicewebapi.models.DhtMessage;
import lombok.AllArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.UUID;

@Repository("postgres") // bean and identifier
@AllArgsConstructor // autogenerated constructor
public class DhtDeviceMeasurementPostgresDAO implements IDeviceMeasurementDAO {

    // java database connector
    @Autowired
    private final JdbcTemplate jdbcTemplate;

    @Override
    public void addDeviceMeasurement(DhtMessage measurement) {
        //TODO: Fix query to JOIN deviceId from DeviceInfo table.
        String query = "INSERT INTO DhtMessages " +
                "(temperature, humidity, timeStamp, ) " +
                "VALUES (?, ? , ?, ? )";

        // execute query
        jdbcTemplate.update(query,
                measurement.getTemperature(),
                measurement.getHumidity(),
                measurement.getTimeStamp(),
                measurement.getDeviceId()
        );
    }

    @Override
    public List<DhtMessage> getAllDeviceMeasurements() {
        String query = "SELECT * FROM DhtMessages";

        return jdbcTemplate.query(query,
                (resultSet, index) -> DhtMessage.DhtMessageFromResultSet(resultSet)
        );
    }

    @Override
    public List<DhtMessage> getLatestMeasurements(int top){
        String query = "SELECT * FROM DhtMessages ORDER BY timeStamp LIMIT ?";
        return jdbcTemplate.query(query,
                (resultSet, index) -> DhtMessage.DhtMessageFromResultSet(resultSet),
                top
        );
    }

    @Override
    public List<DhtMessage> getMeasurementByDeviceId(UUID id) {
        String query = "SELECT * FROM DhtMessages WHERE deviceId = ?";
        return jdbcTemplate.query(query,
                (resultSet, index) -> DhtMessage.DhtMessageFromResultSet(resultSet),
                id
        );
    }
}
